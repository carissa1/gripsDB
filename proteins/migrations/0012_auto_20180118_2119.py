# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-01-18 21:19
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import proteins.validators


class Migration(migrations.Migration):

    dependencies = [
        ('proteins', '0011_auto_20180117_0300'),
    ]

    operations = [
        migrations.AddField(
            model_name='protein',
            name='pdb',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10, unique=True), blank=True, null=True, size=None, verbose_name='Protein DataBank ID'),
        ),
        migrations.AlterField(
            model_name='protein',
            name='genbank',
            field=models.CharField(blank=True, help_text='NCBI Genbank Accession', max_length=12, null=True, unique=True, verbose_name='Genbank Accession'),
        ),
        migrations.AlterField(
            model_name='protein',
            name='seq',
            field=models.CharField(blank=True, help_text='Amino acid sequence (IPG ID is preferred)', max_length=1024, null=True, unique=True, validators=[proteins.validators.protein_sequence_validator], verbose_name='Sequence'),
        ),
        migrations.AlterField(
            model_name='protein',
            name='switch_type',
            field=models.CharField(blank=True, choices=[('b', 'Basic'), ('pa', 'Photoactivatable'), ('ps', 'Photoswitchable'), ('pc', 'Photoconvertible'), ('t', 'Timer'), ('o', 'Multistate')], help_text='Photoswitching type (basic if none)', max_length=2, verbose_name='Type'),
        ),
        migrations.AlterField(
            model_name='state',
            name='ext_coeff',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300000)], verbose_name='Extinction Coefficient'),
        ),
        migrations.AlterField(
            model_name='state',
            name='qy',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Quantum Yield'),
        ),
    ]
